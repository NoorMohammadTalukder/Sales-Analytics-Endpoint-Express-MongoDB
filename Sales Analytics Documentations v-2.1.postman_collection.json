{
	"info": {
		"_postman_id": "f97909ee-37f5-4bbc-b406-86f975d65899",
		"name": "Sales Analytics",
		"description": "ABOUT APIs:  \n  \nThis API allows you to perform sales analytics on a MongoDB database containing sales data. It provides various endpoints to retrieve valuable insights into your sales data.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20207619"
	},
	"item": [
		{
			"name": "/sales/add",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n         \r\n            \"product\": \"Sample Product 8\",\r\n            \"quantity\": 4,\r\n            \"price\": 15,\r\n            \"date\": \"2023-09-10T00:00:00.000Z\"\r\n            \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/sales/add",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"sales",
						"add"
					]
				},
				"description": "**Description:** Add a new sale entry to the database.  \n  \n**Response:**\n\n- `201 Created`: Returns the newly added sale entry.\n    \n- `400 Bad Request`: Returns an error message if any of the required fields are missing.\n    \n- `500 Internal Server Error`: Returns an error message if there is an issue with the server."
			},
			"response": []
		},
		{
			"name": "/sales/get-all",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/sales/get-all",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"sales",
						"get-all"
					]
				},
				"description": "**Description:** Retrieve all sales data.\n\n**Response:**\n\n- `200 OK`: Returns an array of all sales data.\n    \n- `500 Internal Server Error`: Returns an error message if there is an issue with the server."
			},
			"response": []
		},
		{
			"name": "/sales/total-revenue",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/sales/total-revenue",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"sales",
						"total-revenue"
					]
				},
				"description": "**Description:** Calculate and return the total revenue generated by all sales transactions.\n\n**Response:**\n\n- `200 OK`: Returns the total revenue.\n    \n- `404 Not Found`: Returns an error message if no sales data is found.\n    \n- `500 Internal Server Error`: Returns an error message if there is an issue with the server."
			},
			"response": []
		},
		{
			"name": "/sales/quantity-by-product",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/sales/quantity-by-product",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"sales",
						"quantity-by-product"
					]
				},
				"description": "**Description:** Find and return the total quantity sold for each product.\n\n**Response:**\n\n- `200 OK`: Returns an array with the quantity sold for each product.\n    \n- `404 Not Found`: Returns an error message if no sales data is found.\n    \n- `500 Internal Server Error`: Returns an error message if there is an issue with the server."
			},
			"response": []
		},
		{
			"name": "/sales/top-products",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/sales/top-products",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"sales",
						"top-products"
					]
				},
				"description": "**Description:** Retrieve the top 5 products with the highest total revenue, along with their total revenue values.\n\n**Response:**\n\n- `200 OK`: Returns an array with the top 5 products and their total revenue.\n    \n- `404 Not Found`: Returns an error message if no sales data is found.\n    \n- `500 Internal Server Error`: Returns an error message if there is an issue with the server."
			},
			"response": []
		},
		{
			"name": "/sales/average-price",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/sales/average-price",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"sales",
						"average-price"
					]
				},
				"description": "**Description:** Calculate and return the average price of products sold.\n\n**Response:**\n\n- `200 OK`: Returns the average price.\n    \n- `404 Not Found`: Returns an error message if no sales data is found.\n    \n- `500 Internal Server Error`: Returns an error message if there is an issue with the server."
			},
			"response": []
		},
		{
			"name": "/sales/revenue-by-month",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/sales/revenue-by-month",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"sales",
						"revenue-by-month"
					]
				},
				"description": "**Description:** Group the sales data by month and year and calculate the total revenue for each month-year combination.  \n\n**Response:**\n\n- `200 OK`: Returns the average price.\n    \n- `404 Not Found`: Returns an error message if no sales data is found.\n    \n- `500 Internal Server Error`: Returns an error message if there is an issue with the server."
			},
			"response": []
		},
		{
			"name": "/sales/highest-quantity-sold",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/sales/highest-quantity-sold",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"sales",
						"highest-quantity-sold"
					]
				},
				"description": "**Description:** Find and return the product that had the highest quantity sold on a single day.\n\n**Response:**\n\n- `200 OK`: Returns the product with the highest quantity sold on a single day.\n    \n- `404 Not Found`: Returns an error message if no sales data is found.\n    \n- `500 Internal Server Error`: Returns an error message if there is an issue with the server."
			},
			"response": []
		},
		{
			"name": "/sales/department-salary-expense",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/sales/department-salary-expense",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"sales",
						"department-salary-expense"
					]
				},
				"description": "**Description:** Calculate and return the total salary expense for each department.\n\n**Response:**\n\n- `200 OK`: Returns an array with the total salary expense for each department.\n    \n- `404 Not Found`: Returns an error message if no department salary data is found.\n    \n- `500 Internal Server Error`: Returns an error message if there is an issue with the server."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "https://sales-analytics-ostad.onrender.com/api/v1",
			"type": "string"
		}
	]
}